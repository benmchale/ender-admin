import discord
from discord.ext import commands, tasks
from discord.ext.commands import has_permissions
import datetime

client = discord.Client()
token = 'Can't show token :P'
client = commands.Bot(command_prefix='.')


@client.event
async def on_ready():
    change_status.start()
    print('We have logged in as {0.user}'.format(client))


@client.event
async def on_member_join(member):
    channel = client.get_channel(id=700752240163422280)
    embed = discord.Embed(title=f"Welcome! {member.name}", colour=discord.Colour.purple(),
                          description=f"Welcome to **ENDERCRAFT.XYZ** {member.mention}\n"
                                      f"You are member #{len(list(member.guild.members))}\n"
                                      f"***We play FTB Revelation More info at*** {channel.mention}")

    embed.set_thumbnail(url=f"{member.avatar_url}")
    embed.set_author(name=f"{member.name}", icon_url=f"{member.avatar_url}")
    embed.set_footer(text=f"{member.guild}", icon_url=f"{member.guild.icon_url}")
    embed.timestamp = datetime.datetime.utcnow()

    channel = client.get_channel(id=694186364262154371)
    await channel.send(embed=embed)


@client.command(pass_context=True)
@has_permissions(manage_messages=True)
async def mute(ctx, member: discord.Member, amount=1, reason=None):
    await ctx.channel.purge(limit=amount)
    channel_log_id = 704057507768696833
    log_channel = client.get_channel(channel_log_id)
    guild = ctx.guild
    for role in guild.roles:
        if role.name == "Muted":
            await member.add_roles(role)
            embed = discord.Embed(title="**User Muted**", description=f'{member.mention} has been muted!\n'
                                                                      f'**Admin:** {ctx.author.mention}\n'
                                                                      f'**Reason**: {reason}',
                                  color=discord.Colour.purple())
            embed.set_footer(text="ENDERCRAFT.XYZ ADMIN BOT")
            await log_channel.send(embed=embed)
            return

            overwrite = discord.PermissionOverwrite(send_messages=False)
            newRole = await guild.create_role(name="Muted")

            for channel in guild.text_channels:
                await channel.set_permissions(newRole, overwrite=overwrite)
            await member.add_roles(newRole)
            await log_channel.send(embed=embed)


@client.command(pass_context=True)
@has_permissions(manage_messages=True)
async def unmute(ctx, member: discord.Member, amount=1):
    await ctx.channel.purge(limit=amount)
    channel_log_id = 704057507768696833
    log_channel = client.get_channel(channel_log_id)
    guild = ctx.guild

    for role in guild.roles:
        if role.name == "Muted":
            embed = discord.Embed(title="**User Un-Muted**", description=f'{member.mention} has been un-muted!\n'
                                                                         f'**Admin:** {ctx.author.mention}\n',
                                  color=discord.Colour.purple())
            embed.set_footer(text="ENDERCRAFT.XYZ ADMIN BOT")
            await member.remove_roles(role)
            await log_channel.send(embed=embed)
            return


@client.command(pass_context=True)
@has_permissions(manage_messages=True)
async def ping(ctx):
    await ctx.send(f'Ping is {round(client.latency * 1000)}ms')


@client.command(pass_context=True)
@has_permissions(ban_members=True)
async def ban(ctx, member: discord.Member, *, reason=None, amount=1):
    embed = discord.Embed(title="**User Banned**", description=f'{member.mention} has been banned!\n'
                                                               f'**Admin:** {ctx.author.mention}\n'
                                                               f'**Reason:** {reason}', color=discord.Colour.purple())
    embed.set_footer(
        text="If member being banned is not typed in reason, ask the admin who kicked the member, who the member was")
    channel_log_id = 704057507768696833
    log_channel = client.get_channel(channel_log_id)
    await ctx.channel.purge(limit=amount)
    await member.ban(reason=reason)
    await ctx.send(f'{member.mention} has been banned!')
    await log_channel.send(embed=embed)


@client.command(pass_context=True)
@has_permissions(ban_members=True)
async def unban(ctx, *, member, amount=1, reason=None):
    await ctx.channel.purge(limit=amount)
    channel_log_id = 704057507768696833
    log_channel = client.get_channel(channel_log_id)
    banned_users = await ctx.guild.bans()

    member_name, member_discriminator = member.split('#')

    for ban_entry in banned_users:
        user = ban_entry.user

        if (user.name, user.discriminator) == (member_name, member_discriminator):
            await ctx.guild.unban(user)
            embed = discord.Embed(title="**User Unbanned**", description=f'{user.mention} has been unbanned!\n'
                                                                         f'**Admin:** {ctx.author.mention}\n'
                                                                         f'**User:** {reason}',
                                  color=discord.Colour.purple())
            embed.set_footer(text="Please make sure full username and tag are used in the user tab!")
            await log_channel.send(embed=embed)
            return


@client.command(pass_context=True)
@has_permissions(kick_members=True)
async def kick(ctx, member: discord.Member, *, reason=None, amount=1):
    await ctx.channel.purge(limit=amount)
    embed = discord.Embed(title="**User Kicked**", description=f'{member.mention} has been kicked!\n'
                                                               f'**Admin:** {ctx.author.mention}\n'
                                                               f'**Reason:** {reason}', color=discord.Colour.purple())
    embed.set_footer(
        text="If member being kicked is not typed in reason ask the admin who kicked the user, who the member was")
    channel_log_id = 704057507768696833
    log_channel = client.get_channel(channel_log_id)
    await member.kick(reason=reason)
    await log_channel.send(embed=embed)


@client.command(pass_context=True)
@has_permissions(manage_messages=True)
async def clearchat(ctx, amount=5):
    amount = amount + 1
    channel_log_id = 704057507768696833
    log_channel = client.get_channel(channel_log_id)
    await ctx.channel.purge(limit=amount)
    embed = discord.Embed(title="**Cleared Chat**", description=f'**Admin:** {ctx.author.mention}\n'
                                                                f'Has cleared chat in {ctx.channel.mention}',
                          color=discord.Colour.purple())
    embed.set_footer(
        text="ENDERCRAFT.XYZ ADMIN BOT")
    await log_channel.send(embed=embed)


@client.command(aliases=['commands', 'info'], pass_context=True)
@has_permissions(administrator=True)
@commands.cooldown(1, 30, commands.BucketType.user)
async def eb_help(ctx):
    embed = discord.Embed(
        title='Command Help and Info:',
        description='Here is a list of commands for the Endercraft Admins:',
        colour=discord.Colour.purple()
    )
    embed.set_footer(text='ADMIN-BOT was created by Endercraft admins for use on the ENDERCRAFT.XYZ discord server')

    embed.set_thumbnail(
        url='https://cdn.discordapp.com/attachments/701451255423303712/701915612078800966/enderman-logo.png')
    embed.set_author(name='Creator: @Benxii ',
                     icon_url='https://cdn.discordapp.com/attachments/391541827360129025/703327699799638076/125px-Leo_-_Mojang_avatar.png')
    embed.add_field(name='.clearchat<No. of lines>', value='Allows admin to clear chat. Usage .', inline=False)
    embed.add_field(name='.kick <@playername>', value='Gives admin power to kick player from discord server.',
                    inline=False)
    embed.add_field(name='.ban <@playername>', value='Allows admin to ban player from server.!', inline=True)
    embed.add_field(name='.unban <@playername>', value='Allows admin to unban player from server.', inline=True)
    embed.add_field(name='.mute <@playername>', value='Allows admin to mute player.', inline=True)
    await ctx.send(embed=embed)


@tasks.loop(seconds=20)
async def change_status():
    await client.wait_until_ready()
    await client.change_presence(activity=discord.Activity(type=discord.ActivityType.playing,
                                                           name=f'ENDERCRAFT.XYZ with {len(set(client.get_all_members()))} others'))

client.run(token)
